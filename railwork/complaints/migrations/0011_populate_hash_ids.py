# Generated by Django 5.2.1 on 2025-06-05 10:55

from django.db import migrations


def populate_hash_ids(apps, schema_editor):
    """Populate hash_id field for existing PlatformLocation records"""
    PlatformLocation = apps.get_model('complaints', 'PlatformLocation')
    
    # Get all platform locations grouped by station and platform
    for location in PlatformLocation.objects.all().order_by('station', 'platform_number', 'id'):
        # Count existing locations for this platform (with hash_id already set)
        existing_count = PlatformLocation.objects.filter(
            station=location.station,
            platform_number=location.platform_number,
            id__lt=location.id  # Only count those created before this one
        ).count()
        
        # Sequence number is existing_count + 1
        sequence = existing_count + 1
        
        # Format: P + platform_number + sequence_number
        hash_id = f"P{location.platform_number}{sequence}"
        
        # Update the hash_id
        location.hash_id = hash_id
        location.save(update_fields=['hash_id'])


def reverse_populate_hash_ids(apps, schema_editor):
    """Remove all hash_id values (reverse operation)"""
    PlatformLocation = apps.get_model('complaints', 'PlatformLocation')
    PlatformLocation.objects.all().update(hash_id='')


class Migration(migrations.Migration):

    dependencies = [
        ('complaints', '0010_add_hash_id_field'),
    ]

    operations = [
        migrations.RunPython(populate_hash_ids, reverse_populate_hash_ids),
    ]
